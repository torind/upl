"use strict";function isValidDottedPath(e){return null!=e&&""!==e&&"hasOwnProperty"!==e&&MEMBER_NAME_REGEX.test("."+e)}function lookupDottedPath(e,r){if(!isValidDottedPath(r))throw $resourceMinErr("badmember",'Dotted member path "@{0}" is invalid.',r);for(var a=r.split("."),t=0,n=a.length;n>t&&angular.isDefined(e);t++){var o=a[t];e=null!==e?e[o]:void 0}return e}function shallowClearAndCopy(e,r){r=r||{},angular.forEach(r,function(e,a){delete r[a]});for(var a in e)!e.hasOwnProperty(a)||"$"===a.charAt(0)&&"$"===a.charAt(1)||(r[a]=e[a]);return r}var $resourceMinErr=angular.$$minErr("$resource"),MEMBER_NAME_REGEX=/^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;angular.module("ngResource",["ng"]).provider("$resource",function(){var e=/^https?:\/\/[^\/]*/,r=this;this.defaults={stripTrailingSlashes:!0,cancellable:!1,actions:{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}}},this.$get=["$http","$log","$q","$timeout",function(a,t,n,o){function s(e,a){this.template=e,this.defaults=c({},r.defaults,a),this.urlParams={}}function u(e,f,h,m){function g(e,r){var a={};return r=c({},f,r),i(r,function(r,t){d(r)&&(r=r(e)),a[t]=r&&r.charAt&&"@"===r.charAt(0)?lookupDottedPath(e,r.substr(1)):r}),a}function $(e){return e.resource}function E(e){shallowClearAndCopy(e||{},this)}var v=new s(e,m);return h=c({},r.defaults.actions,h),E.prototype.toJSON=function(){var e=c({},this);return delete e.$promise,delete e.$resolved,e},i(h,function(e,s){var u=/^(POST|PUT|PATCH)$/i.test(e.method),f=e.timeout,h=angular.isDefined(e.cancellable)?e.cancellable:m&&angular.isDefined(m.cancellable)?m.cancellable:r.defaults.cancellable;f&&!angular.isNumber(f)&&(t.debug("ngResource:\n  Only numeric values are allowed as `timeout`.\n  Promises are not supported in $resource, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the `cancellable` option."),delete e.timeout,f=null),E[s]=function(r,t,m,y){function b(e){_["catch"](l),D.resolve(e)}var w,P,A,R={};switch(arguments.length){case 4:A=y,P=m;case 3:case 2:if(!d(t)){R=r,w=t,P=m;break}if(d(r)){P=r,A=t;break}P=t,A=m;case 1:d(r)?P=r:u?w=r:R=r;break;case 0:break;default:throw $resourceMinErr("badargs","Expected up to 4 arguments [params, data, success, error], got {0} arguments",arguments.length)}var D,M,O=this instanceof E,T=O?w:e.isArray?[]:new E(w),k={},x=e.interceptor&&e.interceptor.response||$,q=e.interceptor&&e.interceptor.responseError||void 0,C=!!A,S=!!q;i(e,function(e,r){switch(r){default:k[r]=p(e);break;case"params":case"isArray":case"interceptor":case"cancellable":}}),!O&&h&&(D=n.defer(),k.timeout=D.promise,f&&(M=o(D.resolve,f))),u&&(k.data=w),v.setUrlParams(k,c({},g(w,e.params||{}),R),e.url);var _=a(k).then(function(r){var a=r.data;if(a){if(angular.isArray(a)!==!!e.isArray)throw $resourceMinErr("badcfg","Error in resource configuration for action `{0}`. Expected response to contain an {1} but got an {2} (Request: {3} {4})",s,e.isArray?"array":"object",angular.isArray(a)?"array":"object",k.method,k.url);if(e.isArray)T.length=0,i(a,function(e){"object"==typeof e?T.push(new E(e)):T.push(e)});else{var t=T.$promise;shallowClearAndCopy(a,T),T.$promise=t}}return r.resource=T,r});return _=_["finally"](function(){T.$resolved=!0,!O&&h&&(T.$cancelRequest=angular.noop,o.cancel(M),D=M=k.timeout=null)}),_=_.then(function(e){var r=x(e);return(P||l)(r,e.headers),r},C||S?function(e){return C&&A(e),S?q(e):n.reject(e)}:void 0),C&&!S&&_["catch"](l),O?_:(T.$promise=_,T.$resolved=!1,h&&(T.$cancelRequest=b),T)},E.prototype["$"+s]=function(e,r,a){d(e)&&(a=r,r=e,e={});var t=E[s].call(this,e,this,r,a);return t.$promise||t}}),E.bind=function(r){return u(e,c({},f,r),h)},E}var l=angular.noop,i=angular.forEach,c=angular.extend,p=angular.copy,d=angular.isFunction,f=angular.$$encodeUriQuery,h=angular.$$encodeUriSegment;return s.prototype={setUrlParams:function(r,a,t){var n,o,s=this,u=t||s.template,l="",c=s.urlParams=Object.create(null);i(u.split(/\W/),function(e){if("hasOwnProperty"===e)throw $resourceMinErr("badname","hasOwnProperty is not a valid parameter name.");!new RegExp("^\\d+$").test(e)&&e&&new RegExp("(^|[^\\\\]):"+e+"(\\W|$)").test(u)&&(c[e]={isQueryParamValue:new RegExp("\\?.*=:"+e+"(?:\\W|$)").test(u)})}),u=u.replace(/\\:/g,":"),u=u.replace(e,function(e){return l=e,""}),a=a||{},i(s.urlParams,function(e,r){n=a.hasOwnProperty(r)?a[r]:s.defaults[r],angular.isDefined(n)&&null!==n?(o=e.isQueryParamValue?f(n,!0):h(n),u=u.replace(new RegExp(":"+r+"(\\W|$)","g"),function(e,r){return o+r})):u=u.replace(new RegExp("(/?):"+r+"(\\W|$)","g"),function(e,r,a){return"/"===a.charAt(0)?a:r+a})}),s.defaults.stripTrailingSlashes&&(u=u.replace(/\/+$/,"")||"/"),u=u.replace(/\/\.(?=\w+($|\?))/,"."),r.url=l+u.replace(/\/\\\./,"/."),i(a,function(e,a){s.urlParams[a]||(r.params=r.params||{},r.params[a]=e)})}},u}]});